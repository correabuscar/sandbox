$ ./go
     Removed 0 files
   Compiling libc v0.2.153
   Compiling cc v1.0.89
   Compiling proj v0.1.0 (/home/user/sandbox/rust/compile_c_file/with_cargo-issued_warnings/01_proj)
warning: proj@0.1.0: Compiler version doesn't include clang or GCC: "x86_64-pc-linux-gnu-gcc" "--version"
warning: proj@0.1.0: In file included from src/lib.c:6:
warning: proj@0.1.0: src/lib.h:8:2: warning: #warning "manual warning since the deprecated one won't trigger" [-Wcpp]
warning: proj@0.1.0:     8 | #warning "manual warning since the deprecated one won't trigger"
warning: proj@0.1.0:       |  ^~~~~~~
warning: proj@0.1.0: src/lib.h:9:9: note: '#pragma message: This is a custom warning message, too'
warning: proj@0.1.0:     9 | #pragma message "This is a custom warning message, too"
warning: proj@0.1.0:       |         ^~~~~~~
error: Treating the above cargo warnings as errors! So this effectively treated any child cargos(or any job_queue things, like running gcc compiler lookslike) (eg. due to cargo build --jobs 12) having rustc or cargo warnings as cargo warnings in parent - which means compilation of rust from source fails due to libssh2-sys having some warnings like this: warning: libssh2-sys@0.3.0: libssh2/src/hostkey.c:403:5: warning: 'RSA_free' is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. So considering we don't want this to fail, for now, FIXME: we comment out these two lines in this patch. TODO: find a way to replicate this locally to test and see if a libssh2-sys replica will show cargo warnings in child if new keys are added in its Config.toml you can prevent this error from exiting by having env var 'CARGO_PEDANTIC' set to any of the following(case insensitive) values: "0", "off", "no", "disabled"
     Removed 60 files, 51.8MiB total
